<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=" http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">

	<flow name="businessLogicFlow" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67">
		<batch:job jobName="migrateObjectsBatch" doc:id="79b373e6-1aeb-43a9-9dfe-8ac0d2f31fdc">
			<batch:process-records>
				<batch:step name="getCustomerFromWorkdayStep" doc:id="232087de-e311-49c1-a890-439c65ea1af2">
					<ee:transform doc:name="Prepare Get Customer Request"
						doc:id="0e02f46c-ae8d-46ac-b5dc-57f0da276a19">
						<ee:message>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="getCustomerRequest"><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Customers_Request: {
		ns0#Request_Criteria: {
			ns0#Customer_Reference_ID: payload.Id
		},
		ns0#Response_Group: {
			ns0#Include_Reference: true,
			ns0#Include_Customer_Data: true
		}
	}
}]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<workday:revenue-management doc:name="Get Customers" doc:id="dc49f59c-ae2a-4159-b0ad-67909498fc1e" config-ref="Workday_Config" operation="Get_Customers" target="getCustomerResponse">
						<workday:content ><![CDATA[#[vars.getCustomerRequest]]]></workday:content>
					</workday:revenue-management>
					<ee:transform doc:name="Prepare Workday Customer Reference"
						doc:id="0e44967e-228c-48ab-a08d-cf1036662e9e">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
ns ns0 urn:com.workday/bsvc
---

payload ++ { 
	wdayfCustomerReference: {
		"type": vars.getCustomerResponse.body.ns0#Get_Customers_Response.ns0#Response_Data.ns0#Customer.ns0#Customer_Reference.ns0#ID.@ns0#"type",
		value: vars.getCustomerResponse.body.ns0#Get_Customers_Response.ns0#Response_Data.ns0#Customer.ns0#Customer_Reference.ns0#ID
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</batch:step>
				<batch:step name="upsertCustomersInWorkdayStep" doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb">
					<ee:transform doc:name="Prepare Put Customer Request"
						doc:id="80b25c68-5026-44e4-b3fe-af1b593cb905">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc

fun countryMapping(salesforceCountry) =
	if (salesforceCountry == 'USA') 'USA' 
	else p('wdayf.country')


fun industryToCustomerCategoryMapping(industry) =
	if (industry == 'Biotechnology') 'CUSTOMER_CATEGORY-6'
	else if (industry == 'Retail') 'CUSTOMER_CATEGORY-7'
	else if (industry == 'Manufacturing') 'CUSTOMER_CATEGORY-4-8'
	else if (industry == 'Hospitality') 'CUSTOMER_CATEGORY-4'
	else if (industry == 'Technology') 'CUSTOMER_CATEGORY-5'
	else if (industry == 'Finance') 'CUSTOMER_CATEGORY-1'
	else if (industry == 'Healthcare') 'CUSTOMER_CATEGORY-6-9'
	else "CUSTOMER_CATEGORY-3"

fun stateMapping(salesforceState) = 
	if (salesforceState == 'CA') { workdayState:'USA-CA' } else { workdayState: p("wdayf.state") }

---

{
	ns0#Submit_Customer_Request: {
		(ns0#Customer_Reference: {
			ns0#ID @(ns0#"type": payload.wdayfCustomerReference."type"): payload.wdayfCustomerReference.value
		}) if payload.wdayfCustomerReference.value != null,
		ns0#Customer_Data: {
			ns0#Customer_Reference_ID: payload.Id,
			ns0#Customer_Name: payload.Name,
			ns0#Customer_Category_Reference: {
				ns0#ID @(ns0#"type": "Customer_Category_ID"): industryToCustomerCategoryMapping(payload.Industry) default "CUSTOMER_CATEGORY-3"
			},
			ns0#Business_Entity_Data: {
				ns0#Business_Entity_Name: payload.Name,
				ns0#Contact_Data: {
					ns0#Address_Data: {
						ns0#Country_Reference: {
							ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): countryMapping(payload.BillingAddress.country) default p('wdayf.country')
						},
						ns0#Address_Line_Data @(ns0#Type: "ADDRESS_LINE_1"): payload.BillingAddress.street default p('wdayf.street'),
						ns0#Municipality: payload.BillingAddress.city default p('wdayf.city'),
						ns0#Country_Region_Reference: {
							ns0#ID @(ns0#"type": "Country_Region_ID"): stateMapping(payload.BillingAddress.state).workdayState default p('wdayf.state')
						},
						ns0#Postal_Code: payload.BillingAddress.postalCode default p('wdayf.postalCode'),
						ns0#Usage_Data @(ns0#Public: false): {
							ns0#Type_Data @(ns0#Primary: true): {
								ns0#Type_Reference: {
									ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "BUSINESS"
								}
							}
						}
					},
					ns0#Phone_Data: {
						ns0#Phone_Number: payload.Phone default p('wdayf.phone'),
						ns0#Phone_Device_Type_Reference: {
							ns0#ID @(ns0#"type": "Phone_Device_Type_ID"): "1063.5"
						},
						ns0#Usage_Data @(ns0#Public: true): {
							ns0#Type_Data @(ns0#Primary: true): {
								ns0#Type_Reference: {
									ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "BUSINESS"
								}
							}
						}
					},
					(ns0#Web_Address_Data: {
						ns0#Web_Address: if (payload.Website matches /http(s)?:\/\/.*/) payload.Website else "http://" ++ payload.Website,
						ns0#Usage_Data: {
							ns0#Type_Data @(ns0#Primary: true): {
								ns0#Type_Reference: {
									ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "BUSINESS"
								}
							}
						}
					}) if payload.Website != null
				}
			}
		}
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<workday:revenue-management operation='Submit_Customer' doc:name="Submit Customer" doc:id="1a9119a7-b28f-4355-9cbb-e445d9d0dfaf" config-ref="Workday_Config"/>
				</batch:step>
			</batch:process-records>
			<batch:on-complete>
				<ee:transform doc:name="Prepare migration result"
					doc:id="c84b4bc4-5a65-41c1-9d0c-f1ebd3d8db7a">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
"Migration Report: \n"

++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis!
++ "\n Total Records: "				++ payload.totalRecords!
++ "\n Successful Records: "		++ payload.successfulRecords!
++ "\n Failed Records: "			++ payload.failedRecords!
++ "\n Loaded Records: "			++ payload.loadedRecords!
++ "\n Processed Records: " 		++ payload.processedRecords!]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Migration process has finished!"
					doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="Migration process has finished: #[payload]" />

			</batch:on-complete>
		</batch:job>
</flow>

</mule>


        